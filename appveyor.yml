# Appveyor configuration template for Rust using rustup for Rust installation
# https://github.com/starkat99/appveyor-rust

## Operating System (VM environment) ##

# Rust needs at least Visual Studio 2013 Appveyor OS for MSVC targets.
os: Visual Studio 2015

## Build Matrix ##

# This configuration will setup a build for each channel & target combination (12 windows
# combinations in all).
#
# The Rust build targets are of the form
#
# ARCH-pc-windows-TOOLCHAIN
#
# with architecture (x86_64 or i686) and TOOLCHAIN (msvc or gnu).
#
# You may use the `cargoflags` and `RUSTFLAGS` variables to set additional flags for cargo commands
# and rustc, respectively. For instance, you can uncomment the cargoflags lines in the nightly
# channels to enable unstable features when building for nightly. Or you could add additional
# matrix entries to test different combinations of features.
environment:
  matrix:

### MSVC Toolchains ###
    - channel: stable
      target: x86_64-pc-windows-msvc
    - channel: stable
      target: i686-pc-windows-msvc
    - channel: beta
      target: x86_64-pc-windows-msvc
    - channel: beta
      target: i686-pc-windows-msvc
    - channel: nightly
      target: x86_64-pc-windows-msvc
      #cargoflags: --features "unstable"
    - channel: nightly
      target: i686-pc-windows-msvc
      #cargoflags: --features "unstable"

### GNU Toolchains ###
    - channel: stable
      target: x86_64-pc-windows-gnu
    - channel: stable
      target: i686-pc-windows-gnu
    - channel: beta
      target: x86_64-pc-windows-gnu
    - channel: beta
      target: i686-pc-windows-gnu
    - channel: nightly
      target: x86_64-pc-windows-gnu
      #cargoflags: --features "unstable"
    - channel: nightly
      target: i686-pc-windows-gnu
      #cargoflags: --features "unstable"

### Allowed failures ###
matrix:
  allow_failures:
    - channel: beta
    - channel: nightly

## Install Script ##
install:
  - appveyor DownloadFile https://win.rustup.rs/ -FileName rustup-init.exe
  - rustup-init -yv --default-toolchain %channel% --default-host %target%
  - set PATH=%PATH%;%USERPROFILE%\.cargo\bin
  - rustc -vV
  - cargo -vV

## Build Script ##

# 'cargo test' already builds, so disable Appveyor's build stage. This prevents
# the "directory does not contain a project or solution file" error.
build: false

# Uses 'cargo test' to run tests and build. Alternatively, the project may call compiled programs
# directly or perform other testing commands. Rust will automatically be placed in the PATH
# environment variable.
test_script:
  - cargo test --verbose %cargoflags%
